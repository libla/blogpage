<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>p/invokes on 技术宅的自留地</title>
    <link>https://libla.me/tags/p/invokes/</link>
    <description>Recent content in p/invokes on 技术宅的自留地</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright &amp;copy; 2020-{now} 技术宅的自留地. All Rights Reserved</copyright>
    <atom:link href="https://libla.me/tags/p/invokes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C#与非托管——封送和自动封送</title>
      <link>https://libla.me/posts/2015/06/08/csnative2/</link>
      <pubDate>Mon, 08 Jun 2015 09:38:21 +0800</pubDate>
      <guid>https://libla.me/posts/2015/06/08/csnative2/</guid>
      <description>之前说到了如何从C函数声明通过简单的查找替换生成一份C#的静态引用声明(C#与非托管——初体验)，因为只是简单说明，所以全部采用的是基础类型</description>
    </item>
    <item>
      <title>C#与非托管——初体验</title>
      <link>https://libla.me/posts/2015/06/07/csnative1/</link>
      <pubDate>Sun, 07 Jun 2015 21:10:40 +0800</pubDate>
      <guid>https://libla.me/posts/2015/06/07/csnative1/</guid>
      <description>P/Invokes初看起来非常简单，利用DllImport进行extern函数的声明，程序就可以在调用extern函数的时候自动查询调用到对</description>
    </item>
  </channel>
</rss>
